#!/bin/bash

[ -z "${sysman_scripts_dir}" ] && readonly sysman_scripts_dir=$(dirname $0)/..
[ -z "${SYSMAN_LOGDIR}" ] && readonly SYSMAN_LOGDIR=/var/log
readonly log_file=${SYSMAN_LOGDIR}/nas.log
readonly log_facility="nas"

readonly syntax_error=1

print_usage(){
    echo "Change the size of a local netrsc"
    echo "Syntax:"
    echo "   $0 -s size -p tag_list "
    echo "Example:"
    echo "   $0 -s +10G -p backup,john,server1"
    echo "   $0 -s 60G -p work,joe,pc2"
    echo "   $0 -s -40G -p work,sue,big_data"
    exit ${syntax_error}  
}


if [ "$#" -ge 1 ]; then
    while getopts "s:p:h" options; do
	case "${options}" in
	    s)
		readonly size="${OPTARG}"
		;;
	    p)
		readonly tags="${OPTARG/,/ }"
		;;
	    h)
		print_usage
		;;
	esac
    done
else
    print_usage
fi

[ -z "${size}" -o -z "${tags}" ] && print_usage

lvpath=$(${sysman_scripts_dir}/nas/find_single_volume ${tags})
if [ $? -ne 0 ]; then
    exit $?
fi
# using readonly in lvpath declaration confuses the $? check...
readonly lvpath

readonly size_without_units=$(echo ${size} | sed 's_[^0-9+-]*\([+-]\?[0-9]*\)[^0-9]*_\1_g')
readonly dir=$(${sysman_scripts_dir}/nas/mountpoint_of_lv ${lvpath})
readonly current_size=$(${sysman_scripts_dir}/nas/network_resource_size ${dir})
readonly current_size_without_units=$(echo ${current_size} | sed 's_[^0-9+-]*\([+-]\?[0-9]*\)[^0-9]*_\1_g')
fstype=$(${sysman_scripts_dir}/nas/lv_fstype ${lvpath})

if [ ${size:0:1} == "+" -o ${size_without_units} -ge ${current_size_without_units} ]; then
    [ -z "${fstype}" ] && fstype=ext4
    if [ ${fstype} == "ext4" ]; then
	lvresize -L ${size} ${lvpath} && resize2fs ${lvpath}
    elif [ ${fstype} == "xfs" ]; then
	lvresize -L ${size} ${lvpath} && xfs_growfs ${lvpath}
    fi
else
    if [ ${size_without_units} -lt 0 ]; then
	new_size=$(${sysman_scripts_dir}/nas/size_calculator.rb ${current_size} + ${size})
    else
	new_size=${size}
    fi
    umount ${lvpath} && e2fsck -f ${lvpath} && resize2fs ${lvpath} ${new_size} && lvresize -L ${new_size} ${lvpath}
    mount ${lvpath}
fi

